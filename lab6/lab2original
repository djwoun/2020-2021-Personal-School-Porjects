.data
	arr:    .word 1, 2, 3, 4, 5,6,7,8,9
	arr2:  .word 1, 2, 3
	arr3: .word 0, 0, 0
	val_array: .byte '|', 0, 12, 0, 5, 0, 0, 0, -1, -1, -1, -1,'&', 0, 12, 0, 5, 0, 0, 0, -1, -1, -1, -1,'^', 0, 12, 0, 5, 0, 0, 0, -1, -1, -1, -1,'~', 0, 12, 0, 5, 0, 0, 0, -1, -1, -1, -1
.text

j main
	
	#int gofunc(values values[], int num_values);
gofunc:

	move $a2, $a1
	move $a1, $a0
	# iterator
	move  $t0, $zero
	
	# successful operations counter
	move  $t5, $zero
	
	# Get our array 
	gf_loop:
	# size of array
	
	bge $t0, $a2, gf_loop_exit
	
	lh $t1, 2($a1)
	lh $t2, 4($a1)
	lb $t3, 0($a1)
	
	#t4
	beq $t3, '&', AND
	beq $t3, '|', OR
	beq $t3, '^', XOR
	beq $t3, '~', INVERT
	
	
	AND:
	and $t4, $t1, $t2
	add $t5, $t5, 1
	j Break
	OR:
	or  $t4, $t1, $t2
	add $t5, $t5, 1
	j Break
	XOR:
	xor $t4, $t1, $t2
	add $t5, $t5, 1
	j Break
	INVERT:
	nor  $t4, $t1, $t1
	add $t5, $t5, 1
	j Break
	
	Break:
	
	
	
	li $v0, 1
	move $a0, $t1
	syscall
	
	li    $v0, 11
	li    $a0, ' '
	syscall
	
	li $v0, 11
	move $a0, $t3
	syscall
	
	li    $v0, 11
	li    $a0, ' '
	syscall
	
	li $v0, 1
	move $a0, $t2
	syscall
	
	li    $v0, 11
	li    $a0, '='
	syscall
	
	li    $v0, 1
	move    $a0, $t4
	syscall
	
	li    $v0, 11
	li    $a0, '\n'
	syscall
	
	addi $a1, $a1, 12
	addi $t0, $t0, 1
	
	j gf_loop
	
	gf_loop_exit:
	
	
	jr $ra
	
	
matmul:
	move  $t0, $zero

	loopone:
	move  $t1, $zero
	bge $t0 , 3, loopone_end
	
	
	
	looptwo:
	bge $t1 , 3, looptwo_end
	
	lw    $a0, 0($t2)
	lw    $a1, 0($t3)
	
	mul $t5, $a0, $a1
	
	lw    $a2, 0($t4)
	add $t6, $a2, $t5
	sw  $t6, 0($t4)
	
	addi  $t2, $t2, 4
	addi  $t3, $t3, 4
	addi $t1, $t1, 1
	j looptwo
	
	loopone_end:
	jr $ra
	looptwo_end:
	
	addi $t0, $t0, 1
	
	li    $v0, 1
	move    $a0, $t6
	syscall
	
	li    $v0, 11
	li  $a0, ' '
	syscall
	
	addi  $t4, $t4, 4
	addi  $t3, $t3, -12
	
	j loopone
	
	
main:
	#la    $t1, val_array
	#lw $a0, 0($t1)
	
	la $a0, val_array
	li $a1, 4
	jal gofunc
	
	la $t2, arr
	la $t3, arr2
	la $t4, arr3
	jal matmul
	


exit:



# Exit from the program with code 0
	li    $v0, 17
	li    $a0, 0
	syscall
